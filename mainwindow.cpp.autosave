#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QDateTime>


MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow),
    _media(0),
    _smedia(0)
{
    TabMode = TABMODE_CAR;
    UdpCom = new UDPCOM(this);
    _instance = new VlcInstance(VlcCommon::args(),this);
    _player = new VlcMediaPlayer(_instance);
    _sinstance = new VlcInstance(VlcCommon::args(),this);
    _splayer = new VlcMediaPlayer(_sinstance);
    //default set
    CarUrl = FIXEDCARURL;
    SatelliteUrl = FIXEDSATELLITEURL;

    ui->setupUi(this);
    UISet();
    SSConnect();
    startMessage();



}

MainWindow::~MainWindow()
{
    delete ui;
}
/**
 * @brief MainWindow::messageBrowerPrint
 * @param m
 * @param sendtype
 */
void MainWindow::messageBrowerPrint(QString m, int sendtype)
{
    QString time = QDateTime::currentDateTime().toString("yyyy-MM-dd hh:mm:ss#");
    m = time+m;
    switch (sendtype)
    {
    case SENDTYPE_GROUND:
        ui->MessageBrowser->setTextColor(QColor(255,0,0,127));
        ui->MessageBrowser->insertPlainText(tr("Ground==>"));
        switch (TabMode)
        {
        case TABMODE_CAR:
            ui->MessageBrowser->setTextColor(QColor(0,255,0,127));
            ui->MessageBrowser->insertPlainText(tr("Car:\r\n"));
            ui->MessageBrowser->setTextColor(QColor(255,255,255,127));
            ui->MessageBrowser->insertPlainText(m);
            break;
        case TABMODE_SATELLITE:
            ui->MessageBrowser->setTextColor(QColor(255,255,0,127));
            ui->MessageBrowser->insertPlainText(tr("Satellite:\r\n"));
            ui->MessageBrowser->setTextColor(QColor(255,255,255,127));
            ui->MessageBrowser->insertPlainText(m);
            break;
        default:
            break;
        }
        break;
    case SENDTYPE_CAR:
        ui->MessageBrowser->setTextColor(QColor(0,255,0,127));
        ui->MessageBrowser->insertPlainText(tr("Car==>"));
        ui->MessageBrowser->setTextColor(QColor(255,0,0,127));
        ui->MessageBrowser->insertPlainText("Ground:\r\n");
        ui->MessageBrowser->setTextColor(QColor(255,255,255,127));
        ui->MessageBrowser->insertPlainText(m);
        break;
    case SENDTYPE_SATELLITE:
        ui->MessageBrowser->setTextColor(QColor(255,255,0,127));
        ui->MessageBrowser->insertPlainText(tr("Satellite==>"));
        ui->MessageBrowser->setTextColor(QColor(255,0,0,127));
        ui->MessageBrowser->insertPlainText("Ground:\r\n");
        ui->MessageBrowser->setTextColor(QColor(255,255,255,127));
        ui->MessageBrowser->insertPlainText(m);
        break;
    default:
        break;
    }
    return;
}
/**
 * @brief MainWindow::commandEditInput
 */
void MainWindow::commandSend()
{
    QString m = NULL;
    m = ui->commandEdit->text();
    if(m=="")return;
    m = m + "\r\n";
    //echo
    messageBrowerPrint(m,SENDTYPE_GROUND);
    if(m.contains("set"))
    {
        if(m.contains("carip"))
        {
            QString ip = m.mid(tr("set carip ").size());
            //messageBrowerPrint(ip,SENDTYPE_GROUND);
            UdpCom->setCarIpAddress(ip);
        }
        else if(m.contains("carurl"))
        {
            CarUrl = m.mid(tr("set carurl ").size());
            //messageBrowerPrint(url,SENDTYPE_GROUND);

        }
        else if(m.contains("satelliteip"))
        {
            QString ip = m.mid(tr("set satelliteip ").size());
            UdpCom->setSatelliteIpAddress(ip);
        }
        else if(m.contains("satelliteurl"))
        {
            SatelliteUrl = m.mid(tr("set satelliteurl ").size());
        }
    }
    else
    {
        UdpCom->sendMessage(m,TabMode);
    }
    ui->commandEdit->clear();
    return;

}

void MainWindow::UISet()
{
    setWindowTitle(tr("GroundControl"));
    ui->MessageBrowser->setStyleSheet("background:black;");//设置背景颜色
    ui->MessageBrowser->setReadOnly(true);
    _player->setVideoWidget(ui->video);
    ui->video->setMediaPlayer(_player);//设置播放显示
    ui->sendButton->setShortcut(Qt::Key_Return);
    ui->speedLineEdit->setValidator(new QIntValidator(1,99999));
    ui->distanceLineEdit->setValidator(new QIntValidator(1,99999));
    ui->angleLineEdit->setValidator(new QIntValidator(0,360));


}

void MainWindow::startMessage()
{
    QString m = "GroundControl version1.2 \r\nby SkyWorks\r\n";
    ui->MessageBrowser->setTextColor(QColor(255,255,255,127));
    ui->MessageBrowser->insertPlainText(m);

}

void MainWindow::SSConnect()
{
    QObject::connect(ui->sendButton,SIGNAL(clicked(bool)),this,SLOT(commandSend()));//发送指令
    QObject::connect(UdpCom,SIGNAL(backMessage(QString,int)),this,SLOT(messageBrowerPrint(QString,int)));//回复显示
    QObject::connect(ui->connectButton,SIGNAL(clicked(bool)),this,SLOT(openCarUrl()));
    QObject::connect(ui->MessageBrowser,SIGNAL(textChanged()),this,SLOT(browserAutoScroll()));//textbrowser自动滚到最下面
    QObject::connect(ui->forwardButton,SIGNAL(clicked(bool)),this,SLOT(carCommandForward()));
    QObject::connect(ui->backButton,SIGNAL(clicked(bool)),this,SLOT(carCommandBackward()));
    QObject::connect(ui->turnleftButton,SIGNAL(clicked(bool)),this,SLOT(carCommandTurnLeft()));
    QObject::connect(ui->turnrightButton,SIGNAL(clicked(bool)),this,SLOT(carCommandTurnRight()));
    QObject::connect(ui->sconnectButton,SIGNAL(clicked(bool)),this,SLOT(openSatelliteUrl())); 
}

void MainWindow::openCarUrl()
{

    if (CarUrl.isEmpty())
        return;

    _media = new VlcMedia(CarUrl, _instance);

    _player->open(_media);
}

void MainWindow::openSatelliteUrl()
{
    if (SatelliteUrl.isEmpty())
        return;

    _smedia = new VlcMedia(SatelliteUrl, _sinstance);

    _splayer->open(_smedia);
}


void MainWindow::browserAutoScroll()
{
    QTextCursor cursor = ui->MessageBrowser->textCursor();
    cursor.movePosition(QTextCursor::End);
    ui->MessageBrowser->setTextCursor(cursor);

}

void MainWindow::carCommandForward()
{
    QString speed = ui->speedLineEdit->text();
    QString distance = ui->distanceLineEdit->text();
    QString m = "move forward v"+speed+" d"+distance+" \r\n";
    UdpCom->sendMessage(m,TabMode);
    messageBrowerPrint(m,SENDTYPE_GROUND);
}

void MainWindow::carCommandBackward()
{
    QString speed = ui->speedLineEdit->text();
    QString distance = ui->distanceLineEdit->text();
    QString m = "move backward v"+speed+" d"+distance+" \r\n";
    UdpCom->sendMessage(m,TabMode);
    messageBrowerPrint(m,SENDTYPE_GROUND);
}

void MainWindow::carCommandTurnLeft()
{
    QString angle = ui->angleLineEdit->text();
    QString m = "turn left a"+angle+" \r\n";
    UdpCom->sendMessage(m,TabMode);
    messageBrowerPrint(m,SENDTYPE_GROUND);
}

void MainWindow::carCommandTurnRight()
{
    QString angle = ui->angleLineEdit->text();
    QString m = "turn right a"+angle+" \r\n";
    UdpCom->sendMessage(m,TabMode);
    messageBrowerPrint(m,SENDTYPE_GROUND);
}

void MainWindow::on_tabWidget_currentChanged(int index)
{
    switch(index)
    {
    case 0:

        break;
    case 1:

        break;
    }
}
